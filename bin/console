#!/usr/bin/env php
<?php declare(strict_types=1);

require_once __DIR__ . '/../vendor/autoload.php';

use App\DependencyInjection\ApplicationCompilerPass;
use Symfony\Component\Config\ConfigCache;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Output\StreamOutput;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Dumper\PhpDumper;
use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;

$containerFile = __DIR__ . '/../var/cache/container.php';
$containerCache = new ConfigCache($containerFile, false);

if (!$containerCache->isFresh()) {
    $containerBuilder = new ContainerBuilder();
    $containerBuilder->setParameter('kernel.project_dir', __DIR__ . '/..');
    $loader = new YamlFileLoader($containerBuilder, new FileLocator(__DIR__ . '/../config/'));
    $loader->load('services.yaml');
    $containerBuilder->addCompilerPass(new ApplicationCompilerPass());
    $containerBuilder->compile();

    $dumper = new PhpDumper($containerBuilder);
    $containerCache->write($dumper->dump(['class' => 'CachedContainer']), $containerBuilder->getResources());
}

require_once $containerFile;
$container = new CachedContainer();

// Output everything to stderr, so we can see the logs in cloud run
$output = new StreamOutput(fopen('php://stderr', 'w'));
$container->get(Application::class)->run(null, $output);
